<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridViewTextBoxColumn7.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn8.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn9.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn10.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn11.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn1.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn2.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn3.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn4.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn6.UserAddedColumn" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Un7//f8AHbVfPeXl68oAAAAASUVORK5CYII=
</value>
  </data>
</root>